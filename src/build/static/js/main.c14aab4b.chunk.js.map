{"version":3,"sources":["MyStore/Components/MainPage/Header.tsx","MyStore/Components/MainPage/SideBarList.tsx","MyStore/Components/MainPage/SideBarDrawer.tsx","MyStore/Components/GenericTable/TablePagingAction.tsx","MyStore/Components/Orders/SingleOrderRow.tsx","MyStore/Components/GenericTable/GenericTable.tsx","MyStore/Components/GenericTable/GenericTableStyle.ts","MyStore/Components/Products/SingleProductRow.tsx","MyStore/Components/Products/TableProduct.tsx","MyStore/Components/Orders/TableOrder.tsx","MyStore/Mocks/Orders/MockOrders.ts","MyStore/Components/Home/Home.tsx","MyStore/Components/SingleProductPage/SingleProduct.tsx","MyStore/Components/StorageManagment/AddNewProduct.tsx","MyStore/Components/StorageManagment/StorageManagement.tsx","MyStore/Components/Products/FetchDataFromServer.ts","MyStore/Components/Router/RouterPage.tsx","MyStore/MyStore.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","display","Header","open","handleDrawerOpen","classes","AppBar","position","className","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","to","Typography","variant","noWrap","SideBarList","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","SideBarDrawer","handleDrawerClose","Drawer","paper","PagingStyle","root","TablePaginationActions","OrderState","props","useTheme","count","page","rowsPerPage","onChangePage","event","disabled","direction","Math","ceil","max","GenericTableStyle","table","margin","GenericTable","rows","rowComponent","React","useState","setPage","setRowsPerPage","rowsToDisplay","slice","length","TableContainer","component","Paper","Table","TableHead","TableRow","TablePagination","rowsPerPageOptions","label","value","colSpan","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","target","ActionsComponent","TableBody","minWidth","image","height","img","SingleProductRow","id","name","price","description","removeFromCart","amount","Grid","container","item","ButtonBase","src","xs","sm","gutterBottom","Button","undefined","TableOrder","map","row","key","SingleOrderRow","date","status","totalPrice","imageSrc","toDateString","getDate","data","Date","Open","Done","Canceled","Home","maxWidth","float","addToCart","SinglePage","productId","axios","post","then","res","console","log","AddProductToShoppingCart","AddNewProductStyle","sendProductData","productName","productDescription","productCategory","productAmount","productPrice","FormData","append","statusText","sendDataToServer","AddNewProduct","setProductName","setProductDescription","setProductCategory","setProductAmout","productImgSrc","setProductImageSrc","setProductPrice","TextField","onChange","Select","labelId","MenuItem","type","min","Number","files","URL","createObjectURL","StorageManagement","FetchMultipleProductbyId","ids","callback","get","ProductByCategory","products","setProducts","category","useParams","useEffect","FetchProductsbyCategory","TableProduct","ShowAllOrders","orderData","ProductById","product","setProduct","FetchProductbyId","SingleProduct","ShoppingCart","substring","temp","tempProduct","delete","filter","filterProduct","RouterPage","path","content","flexGrow","MyStore","setOpen","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c14aab4b.chunk.js","sourcesContent":["import React, {FC} from 'react';\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport clsx from \"clsx\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./linkStyle.css\"\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n        appBarShift: {\r\n            marginLeft: drawerWidth,\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        menuButton: {\r\n            marginRight: 36,\r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n    }),\r\n);\r\n\r\nconst Header: FC<{open: boolean, handleDrawerOpen: () => void}> = ({open, handleDrawerOpen}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar\r\n            position=\"fixed\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: open,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={handleDrawerOpen}\r\n                    edge=\"start\"\r\n                    className={clsx(classes.menuButton, {\r\n                        [classes.hide]: open,\r\n                    })}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Link to=\"/\" className=\"LinkStyle\">\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        MyStore\r\n                    </Typography>\r\n                </Link>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, {FC} from 'react';\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TvIcon from '@material-ui/icons/Tv';\r\nimport AndroidIcon from '@material-ui/icons/Android';\r\nimport ComputerIcon from '@material-ui/icons/Computer';\r\nimport HeadsetIcon from '@material-ui/icons/Headset';\r\nimport SportsFootballIcon from '@material-ui/icons/SportsFootball';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport \"./linkStyle.css\"\r\n\r\nconst SideBarList: FC = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <List>\r\n                <ListItem button>\r\n                    <ListItemIcon><Link to=\"/products/Televisions\" className=\"LinkStyle\"><TvIcon/></Link></ListItemIcon>\r\n                    <Link to=\"/products/Televisions\" className=\"LinkStyle\"><ListItemText primary=\"Televisions\"/></Link>\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <ListItemIcon><Link to=\"/products/Cellphones\" className=\"LinkStyle\"><AndroidIcon/></Link></ListItemIcon>\r\n                    <Link to=\"/products/Cellphones\" className=\"LinkStyle\"><ListItemText primary=\"Cellphones\" /></Link>\r\n                </ListItem>\r\n\r\n                <ListItem button>\r\n                    <ListItemIcon><Link to=\"/products/Computers\" className=\"LinkStyle\"><ComputerIcon/></Link></ListItemIcon>\r\n                    <Link to=\"/products/Computers\" className=\"LinkStyle\"><ListItemText primary=\"Computers\" /></Link>\r\n                </ListItem>\r\n\r\n                <ListItem button>\r\n                    <ListItemIcon><Link to=\"/products/Headset\" className=\"LinkStyle\"><HeadsetIcon/></Link></ListItemIcon>\r\n                    <Link to=\"/products/Headset\" className=\"LinkStyle\"><ListItemText primary=\"Headset\" /></Link>\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <ListItemIcon><Link to=\"/products/Sport\" className=\"LinkStyle\"><SportsFootballIcon/></Link></ListItemIcon>\r\n                    <Link to=\"/products/Sport\" className=\"LinkStyle\"><ListItemText primary=\"Sport\" /></Link>\r\n                </ListItem>\r\n\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                <ListItem button>\r\n                    <ListItemIcon><Link to=\"/shoppingcart\" className=\"LinkStyle\"><ShoppingCartIcon/></Link></ListItemIcon>\r\n                    <Link to=\"/shoppingcart\" className=\"LinkStyle\"><ListItemText primary=\"Shopping Cart\"/></Link>\r\n                </ListItem>\r\n\r\n                <ListItem button>\r\n                    <ListItemIcon><Link to=\"/orders\" className=\"LinkStyle\"><AssignmentIcon/></Link></ListItemIcon>\r\n                    <Link to=\"/orders\" className=\"LinkStyle\"><ListItemText primary=\"Orders\"/></Link>\r\n                </ListItem>\r\n\r\n                <ListItem button>\r\n                    <ListItemIcon><Link to=\"/Storage\" className=\"LinkStyle\"><StorageIcon/></Link></ListItemIcon>\r\n                    <Link to=\"/Storage\" className=\"LinkStyle\"><ListItemText primary=\"Storage manage\"/></Link>\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SideBarList;\r\n","import React, {FC} from 'react';\r\nimport clsx from \"clsx\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport SideBarList from \"./SideBarList\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            whiteSpace: 'nowrap',\r\n        },\r\n        drawerOpen: {\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        drawerClose: {\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            overflowX: 'hidden',\r\n            width: theme.spacing(7) + 1,\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: theme.spacing(9) + 1,\r\n            },\r\n        },\r\n        toolbar: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            padding: theme.spacing(0, 1),\r\n            ...theme.mixins.toolbar,\r\n        },\r\n    }),\r\n);\r\n\r\nconst SideBarDrawer: FC<{open: boolean, handleDrawerClose: () => void}> = ({open, handleDrawerClose}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Drawer\r\n            variant=\"permanent\"\r\n            className={clsx(classes.drawer, {\r\n                [classes.drawerOpen]: open,\r\n                [classes.drawerClose]: !open,\r\n            })}\r\n            classes={{\r\n                paper: clsx({\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                }),\r\n            }}\r\n        >\r\n            <div className={classes.toolbar}>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                    <ChevronRightIcon />\r\n                </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <SideBarList/>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nexport default SideBarDrawer;\r\n","import React, {FC} from \"react\";\r\nimport {createStyles, makeStyles, Theme, useTheme} from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\n\r\nconst PagingStyle = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexShrink: 0,\r\n            marginLeft: theme.spacing(2.5),\r\n        },\r\n    }),\r\n);\r\n\r\nexport interface TablePaginationActionsProps {\r\n    count: number;\r\n    page: number;\r\n    rowsPerPage: number;\r\n    onChangePage: (event: React.MouseEvent<HTMLButtonElement>, newPage: number) => void;\r\n}\r\n\r\nfunction TablePaginationActions(props: TablePaginationActionsProps) {\r\n    const classes = PagingStyle();\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n    const handleFirstPageButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        onChangePage(event, 0);\r\n    };\r\n\r\n    const handleBackButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        onChangePage(event, page - 1);\r\n    };\r\n\r\n    const handleNextButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        onChangePage(event, page + 1);\r\n    };\r\n\r\n    const handleLastPageButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <IconButton\r\n                onClick={handleFirstPageButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"first page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n            </IconButton>\r\n            <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleNextButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"next page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleLastPageButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"last page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TablePaginationActions;","import React, {FC} from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useStyles from \"../GenericTable/GenericTableStyle\"\r\nimport { ButtonBase } from '@material-ui/core';\r\n\r\nexport enum OrderState{\r\n    Done = 'Done',\r\n    Open = 'Open',\r\n    Canceled = 'Canceled'\r\n}\r\n\r\nexport interface OrderProps {\r\n    totalPrice: number,\r\n    date: Date,\r\n    status: OrderState,\r\n    id: number,\r\n    imageSrc: string\r\n}\r\n\r\nconst SingleOrderRow: FC<OrderProps> = ({date, status, totalPrice, imageSrc}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.paper}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item>\r\n                        <ButtonBase className={classes.image}>\r\n                            <img className={classes.img} src={imageSrc} />\r\n                        </ButtonBase>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm container>\r\n                        <Grid item xs container direction=\"column\" spacing={2}>\r\n                            <Grid item xs>\r\n                                <Typography gutterBottom variant=\"subtitle1\">\r\n                                    {date.toDateString()}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" gutterBottom>\r\n                                    {status}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"subtitle1\">${totalPrice}</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SingleOrderRow;","import React, {FC} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {TableHead} from \"@material-ui/core\";\r\nimport {OrderProps} from \"../Orders/SingleOrderRow\";\r\nimport {ProductProps} from \"../Products/SingleProductRow\"\r\nimport TablePaginationActions from \"./TablePagingAction\";\r\n\r\nconst GenericTableStyle = makeStyles({\r\n    table: {\r\n        width: '500px',\r\n        margin: 'auto'\r\n    },\r\n});\r\n\r\nexport interface GenericTableProps {\r\n    rows: OrderProps[] | ProductProps[],\r\n    rowComponent: FC< {rows: OrderProps[] | ProductProps[]}>\r\n}\r\n\r\nconst GenericTable: FC<GenericTableProps> = ({rows, rowComponent}) => {\r\n    const classes = GenericTableStyle();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement> | null, newPage: number) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (\r\n        event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    ) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const rowsToDisplay= {\r\n        rows:(rowsPerPage > 0\r\n                ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                : rows\r\n        )\r\n    };\r\n\r\n    // @ts-ignore\r\n    // @ts-ignore\r\n    return (\r\n        <div className={classes.table}>\r\n        {(rows.length === 0) ?\r\n            <h1>There is not object to display</h1> :\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TablePagination\r\n                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                colSpan={3}\r\n                                count={rows.length}\r\n                                rowsPerPage={rowsPerPage}\r\n                                page={page}\r\n                                SelectProps={{\r\n                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                    native: true,\r\n                                }}\r\n                                onChangePage={handleChangePage}\r\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                ActionsComponent={TablePaginationActions}\r\n                            />\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            rowComponent({...rowsToDisplay})\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GenericTable;\r\n","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '100%'\r\n        },\r\n        paper: {\r\n            padding: theme.spacing(2),\r\n            minWidth: '500px'\r\n        },\r\n        image: {\r\n            width: 128,\r\n            height: 128,\r\n        },\r\n        img: {\r\n            margin: 'auto',\r\n            display: 'block',\r\n            width: '100px',\r\n            height: '100px',\r\n        },\r\n    }),\r\n);\r\n\r\nexport default useStyles;","import React, {FC} from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport useStyles from \"../GenericTable/GenericTableStyle\"\r\nimport { Button } from '@material-ui/core';\r\nimport {Link} from \"react-router-dom\";\r\nexport interface ProductProps {\r\n    id: number,\r\n    name: string,\r\n    description: string,\r\n    price: number,\r\n    amount: number\r\n    removeFromCart?: () => void\r\n}\r\n\r\nconst SingleProductRow: FC<ProductProps> = (\r\n    {\r\n        id,\r\n        name,\r\n        description,\r\n        price,\r\n        amount,\r\n        removeFromCart\r\n    }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.paper}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item>\r\n                        <ButtonBase className={classes.image}>\r\n                            <img className={classes.img} src={\"http://localhost:4000/static/\" + id + \".png\"} />\r\n                        </ButtonBase>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm container>\r\n                        <Grid item xs container direction=\"column\" spacing={2}>\r\n                            <Grid item xs>\r\n                                <Typography gutterBottom>\r\n                                    {name}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography>${price}</Typography>\r\n                            <Link to={`/productById/${id}`} className=\"LinkStyle\">\r\n                                <Button \r\n                                    variant=\"contained\" \r\n                                    color=\"default\"\r\n                                >\r\n                                    view product\r\n                                </Button>\r\n                            </Link>\r\n                            {\r\n                                removeFromCart !== undefined ?\r\n                                <Button \r\n                                    variant=\"contained\" \r\n                                    color=\"secondary\"\r\n                                    onClick= {() => removeFromCart()}\r\n                                >\r\n                                    remove\r\n                                </Button> :\r\n                                <></>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SingleProductRow;","import React, {FC} from 'react';\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport SingleProductRow, {ProductProps} from \"./SingleProductRow\"\r\n\r\nconst TableOrder: FC<{rows: ProductProps[] | any}> = ({rows}) => {\r\n    return (\r\n        <div className=\"App\">\r\n            {\r\n                rows.map((row: ProductProps) =>\r\n                    <TableRow key={row.id}>\r\n                        <SingleProductRow {...row}/>\r\n                    </TableRow>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TableOrder;\r\n","import React, {FC} from 'react';\r\nimport SingleOrderRow, {OrderProps} from \"./SingleOrderRow\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nconst TableOrder: FC<{rows: OrderProps[] | any}> = ({rows}) => {\r\n    return (\r\n        <div className=\"App\">\r\n            {\r\n                rows.map((row: OrderProps) =>\r\n                    <TableRow key={row.date.getDate()}>\r\n                        <SingleOrderRow {...row}/>\r\n                    </TableRow>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TableOrder;\r\n","import {OrderProps, OrderState} from '../../Components/Orders/SingleOrderRow'\r\n\r\nconst data: OrderProps[] = [\r\n    {\r\n        id: 1,\r\n        date: new Date(),\r\n        status: OrderState.Open,\r\n        totalPrice: 30,\r\n        imageSrc: \"\"\r\n    }, \r\n    {\r\n        id: 2,\r\n        date: new Date(),\r\n        status: OrderState.Done,\r\n        totalPrice: 40,\r\n        imageSrc: \"\"\r\n    },\r\n    {\r\n        id: 3,\r\n        date: new Date(),\r\n        status: OrderState.Canceled,\r\n        totalPrice: 150,\r\n        imageSrc: \"\"\r\n    }\r\n]\r\n\r\nexport default data;","import React, {FC} from 'react';\r\n\r\nconst Home: FC = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Welcome to my store</h1>\r\n            <h2>Try to have fun</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, {FC} from 'react';\r\nimport {ProductProps} from \"../Products/SingleProductRow\"\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            maxWidth: 700,\r\n            margin: 'auto'\r\n        },\r\n        image: {\r\n            width: 328,\r\n            height: 328,\r\n        },\r\n        img: {\r\n            margin: 'auto',\r\n            display: 'block',\r\n            width: '300px',\r\n            height: '300px',\r\n        },\r\n        price: {\r\n            float: 'left'\r\n        },\r\n        addToCart: {\r\n            float: 'right'\r\n        }\r\n    }),\r\n);\r\n\r\nconst AddProductToShoppingCart = (productId: number) => {\r\n    const data = {\r\n        productId: productId,\r\n    }\r\n\r\n    axios.post(\"http://localhost:4000/api/shoppingcart/addProduct\", data, {}).then(\r\n        res => { // then print response status\r\n            console.log(res)\r\n    })\r\n}\r\n\r\nconst SinglePage: FC<ProductProps> = ({id, name, description, amount, price}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid className={classes.root} container spacing={2}>\r\n                <Grid item>\r\n                    <div className={classes.image}>\r\n                        <img className={classes.img} src={\"http://localhost:4000/static/\" + id + \".png\"} />\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12} sm container>\r\n                    <Grid item xs container direction=\"column\">\r\n                        <h1>{name}</h1>\r\n                        {description}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <div>\r\n                <p className={classes.price}>Final price:${price}</p>\r\n                <Button \r\n                    className={classes.addToCart} \r\n                    color=\"primary\" \r\n                    variant=\"contained\"\r\n                    onClick = {() => {\r\n                        AddProductToShoppingCart(id)\r\n                    }}>\r\n                    Add to shopping cart\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SinglePage;\r\n","import React, {FC, useState, ChangeEvent} from 'react';\r\nimport { TextField, Grid, makeStyles, Select, MenuItem, Button} from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\nconst AddNewProductStyle = makeStyles({\r\n    root: {\r\n        width: '500px',\r\n        margin: 'auto'\r\n    },\r\n});\r\n\r\nconst sendDataToServer = (image: File, id: string) => {\r\n    const data = new FormData() \r\n    data.append('file', image)\r\n    axios.post(\"http://localhost:4000/api/product/add/\" + id, data, { // receive two parameter endpoint url ,form data \r\n    })\r\n    .then(res => { // then print response status\r\n    console.log(res.statusText)\r\n    })\r\n}\r\n\r\nconst sendProductData = (image: File, productName: string, productDescription: string, productCategory: string, productAmount: string, productPrice: number): number => {\r\n    const data = {\r\n        productName: productName,\r\n        productDescription: productDescription,\r\n        productCategory: productCategory,\r\n        productAmount: productAmount,\r\n        productPrice: productPrice\r\n    }\r\n\r\n    axios.post(\"http://localhost:4000/api/product/addProduct\", data, {}).then(\r\n        res => { // then print response status\r\n            console.log(res)\r\n            sendDataToServer(image, res.data)\r\n    })\r\n\r\n    return 0;\r\n}\r\n\r\n\r\nconst AddNewProduct: FC = () => {\r\n    const classes = AddNewProductStyle();\r\n    const [productName, setProductName] = useState<string>('');\r\n    const [productDescription, setProductDescription] = useState<string>('');\r\n    const [productCategory, setProductCategory] = useState<string>('');\r\n    const [productAmount, setProductAmout] = useState<string>('');\r\n    const [productImgSrc, setProductImageSrc] = useState<File>();\r\n    const [productPrice, setProductPrice] = useState<number>(0);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={3} className={classes.root}>\r\n                <Grid item xs={6}>\r\n                <h3>Name: </h3>\r\n                <TextField \r\n                    id=\"standard-basic\" \r\n                    value={productName} \r\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => setProductName(event.target.value)}\r\n                />\r\n                <h3>Description: </h3>\r\n                <TextField \r\n                    id=\"standard-basic\" \r\n                    value={productDescription} \r\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => setProductDescription(event.target.value)}/>\r\n                <h3>Category:</h3>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={productCategory}\r\n                    onChange={(event: ChangeEvent<any>) => setProductCategory(event.target.value)}\r\n                >\r\n                    <MenuItem value={'Televisions'}>Televisions</MenuItem>\r\n                    <MenuItem value={'Cellphones'}>Cellphones</MenuItem>\r\n                    <MenuItem value={'Computers'}>Computers</MenuItem>\r\n                    <MenuItem value={'Headset'}>Headset</MenuItem>\r\n                    <MenuItem value={'Sport'}>Sport</MenuItem>\r\n                </Select>\r\n                <h3>Amount:</h3>\r\n                <input \r\n                    type=\"number\" \r\n                    name=\"quantity\"\r\n                    min=\"1\" \r\n                    max=\"5\" \r\n                    value={productAmount} \r\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => setProductAmout(event.target.value)}\r\n                />\r\n                <h3>Price:</h3>\r\n                <TextField \r\n                    id=\"standard-basic\" \r\n                    value={productPrice} \r\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\r\n                        if(event.target.value === '') {\r\n                            setProductPrice(0)\r\n                        }\r\n                        else if (Number(event.target.value)) {\r\n                            setProductPrice(Number(event.target.value))\r\n                        }\r\n                    }}/>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <h3>image src: </h3>\r\n                    <input type=\"file\" \r\n                        name=\"file\" \r\n                        onChange={(event: ChangeEvent<any>)=> setProductImageSrc(event.target.files[0])}/>\r\n                    {\r\n                        productImgSrc !== undefined ? <img src={URL.createObjectURL(productImgSrc)}/> : <></>\r\n                    }\r\n                </Grid>\r\n                    {/* <DropzoneArea \r\n                        maxFileSize = {3145728}\r\n                        filesLimit= {1}\r\n                        onChange= {(files) => {\r\n                            setProductImageSrc(files)}\r\n                        }\r\n                    />       */}\r\n            </Grid>\r\n            <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"\r\n                onClick={() => {\r\n                    if(productImgSrc !== undefined) {\r\n                        sendProductData(productImgSrc, productName, productDescription, productCategory, productAmount, productPrice)\r\n                    }\r\n                }}\r\n            >\r\n                Add product\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n","import React, {FC, useState} from 'react';\r\nimport AddNewProduct from \"./AddNewProduct\"\r\n\r\nconst StorageManagement: FC = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            Storage Management\r\n            <AddNewProduct/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StorageManagement;\r\n","import {ProductProps} from \"./SingleProductRow\"\r\nimport axios from 'axios';\r\n\r\nexport const FetchProductsbyCategory = (category: string = \"\", callback: (products: ProductProps[]) => void): void => {\r\n    axios.get(\"http://localhost:4000/api/product/category/\" + category).then(\r\n        res => { // then print response status\r\n            callback (res.data)\r\n            console.log(res.data)\r\n    })\r\n}\r\n\r\nexport const FetchProductbyId = (productId: number = 0, callback: (products: ProductProps) => void): void => {\r\n    axios.get(\"http://localhost:4000/api/product/id/\" + productId).then(\r\n        res => { // then print response status\r\n            callback (res.data[0])\r\n            console.log(res.data)\r\n    })\r\n}\r\n\r\nexport const FetchProductsIdFromShoppingCart = (callback: (products: ProductProps[]) => void) : void => {\r\n    axios.get(\"http://localhost:4000/api/shoppingcart/\").then(\r\n        (res: {\r\n            data: {id: number, productId: number,amount:number}[]\r\n        }) => { // then print response status\r\n            let ids = \"\"\r\n            if (res.data.length != 0) {\r\n                res.data.map(value => ids= ids + \",\" + value.productId)\r\n                ids = ids.substring(1);\r\n                console.log(ids)\r\n                FetchMultipleProductbyId(ids, callback);\r\n            } else {\r\n                callback([])\r\n            }\r\n    })\r\n}\r\n\r\nexport const FetchMultipleProductbyId = (ids: string, callback: (products: ProductProps[]) => void) : void => {\r\n    axios.get(\"http://localhost:4000/api/product/mulitipleid/\" + ids).then(\r\n        res => { // then print response status\r\n            console.log(res.data)\r\n            callback(res.data)\r\n    })\r\n}\r\n\r\nexport const removeProductFromShoppingCart = (id: number) : void => {\r\n    axios.delete(\"http://localhost:4000/api/shoppingcart/removeProduct/\" + id).then(\r\n        res => { // then print response status\r\n            console.log(res.data)\r\n    })\r\n}","import React, {FC, useState, useEffect} from 'react';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport GenericTable from \"../GenericTable/GenericTable\";\r\nimport TableProduct from \"../Products/TableProduct\"\r\nimport TableOrder from \"../Orders/TableOrder\"\r\n\r\nimport orderData from \"../../Mocks/Orders/MockOrders\";\r\nimport Home from \"../Home/Home\";\r\nimport SingleProductPage from \"../SingleProductPage/SingleProduct\";\r\nimport StorageManagement from \"../StorageManagment/StorageManagement\"\r\n\r\nimport {FetchProductsbyCategory, FetchProductbyId, FetchProductsIdFromShoppingCart, removeProductFromShoppingCart} from \"../Products/FetchDataFromServer\"\r\nimport { ProductProps } from '../Products/SingleProductRow';\r\n\r\nconst ProductByCategory: FC = () => {\r\n    const [products, setProducts] = useState<ProductProps[]>([])\r\n    let { category } = useParams();\r\n    useEffect(() => {\r\n        FetchProductsbyCategory(category, (products: ProductProps[]) => setProducts(products))\r\n    }, [category])\r\n\r\n    return (\r\n        <GenericTable\r\n            rowComponent={TableProduct}\r\n            rows={products}\r\n        />\r\n    );\r\n};\r\n\r\nconst ShowAllOrders : FC = () => {\r\n    return (\r\n        <GenericTable\r\n            rowComponent={TableOrder}\r\n            rows = {orderData}\r\n        />\r\n    )\r\n}\r\n\r\nconst ProductById : FC = () => {\r\n    let { productId } = useParams();\r\n    const [product, setProduct] = useState<ProductProps>()\r\n\r\n    useEffect(() => {\r\n        FetchProductbyId(Number(productId), (data: ProductProps) => setProduct(data))\r\n    }, [productId])\r\n\r\n    return (\r\n        <div>\r\n        {\r\n            (product !== undefined) ? \r\n            <SingleProductPage {...product} />:\r\n            <div>Invalid product id</div>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ShoppingCart: FC = () => {\r\n    const [products, setProducts] = useState<ProductProps[]>([])\r\n\r\n    useEffect(() => {\r\n        FetchProductsIdFromShoppingCart((data: ProductProps[]) => setProducts(data))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const temp = products.map(product => {\r\n            const tempProduct:ProductProps = product\r\n            tempProduct.removeFromCart = () => {\r\n                removeProductFromShoppingCart(product.id)\r\n                setProducts(products.filter(filterProduct => filterProduct.id !== product.id))\r\n            }\r\n            return tempProduct\r\n        })\r\n\r\n        setProducts(temp)\r\n    }, [products.length])\r\n    return (\r\n        <GenericTable\r\n            rowComponent={TableProduct}\r\n            rows={products}\r\n        />\r\n    )\r\n}\r\n\r\nconst RouterPage: FC = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/products/:category\">\r\n                <ProductByCategory/>\r\n            </Route>\r\n            <Route path=\"/productById/:productId\">\r\n                <ProductById/>\r\n            </Route>\r\n            <Route path=\"/orders/\">\r\n                <ShowAllOrders/>\r\n            </Route>\r\n            <Route path=\"/shoppingcart\">\r\n                <ShoppingCart/>\r\n            </Route>\r\n            <Route path=\"/storage\">\r\n                <StorageManagement/>\r\n            </Route>\r\n            <Route path=\"/\">\r\n                <Home/>\r\n            </Route>\r\n        </Switch>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default RouterPage;\r\n","import React from 'react';\r\nimport {createStyles, makeStyles, Theme, useTheme} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Header from \"./Components/MainPage/Header\"\r\nimport SideBarDrawer from \"./Components/MainPage/SideBarDrawer\";\r\nimport RouterPage from \"./Components/Router/RouterPage\";\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        toolbar: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            padding: theme.spacing(0, 1),\r\n            ...theme.mixins.toolbar,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(3),\r\n        },\r\n    }),\r\n);\r\n\r\nconst MyStore: React.FC = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Router>\r\n                <Header\r\n                    handleDrawerOpen={()=>handleDrawerOpen()}\r\n                    open={open}\r\n                />\r\n                <SideBarDrawer\r\n                    handleDrawerClose={()=> handleDrawerClose()}\r\n                    open={open}\r\n                />\r\n                <main className={classes.content}>\r\n                    <div className={classes.toolbar} />\r\n                    <RouterPage/>\r\n\r\n                    {/*<GenericTable rowComponent={TableOrder} rows={[{status: \"2\", date: new Date(), totalPrice:\"20\"}]}/>*/}\r\n                </main>\r\n            </Router>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyStore;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MyStore from \"./MyStore/MyStore\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<MyStore />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
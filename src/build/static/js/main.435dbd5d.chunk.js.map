{"version":3,"sources":["MyStore/Components/MainPage/Header.tsx","MyStore/Components/MainPage/SideBarList.tsx","MyStore/Components/MainPage/SideBarDrawer.tsx","MyStore/Components/Home/Home.tsx","MyStore/Components/Products/FetchDataFromServer.ts","MyStore/Components/StoreManagment/AddNewProduct.tsx","MyStore/Components/GenericTable/TablePagingAction.tsx","MyStore/Components/GenericTable/GenericTable.tsx","MyStore/Components/GenericTable/GenericTableStyle.ts","MyStore/Components/Products/ProductRow.tsx","MyStore/Components/Products/ProductsTable.tsx","MyStore/Components/StoreManagment/ManageProducts.tsx","MyStore/Components/Orders/OrderRow.tsx","MyStore/Components/Orders/OrdersTable.tsx","MyStore/Components/StoreManagment/ManageOrders.tsx","MyStore/Components/StoreManagment/StoreManagement.tsx","MyStore/Components/Products/ProductByCategory.tsx","MyStore/Components/Orders/OrdersPage.tsx","MyStore/Components/Products/SingleProductPage.tsx","MyStore/Components/Products/ProductById.tsx","MyStore/Components/ShoppingCart/ShoppingCart.tsx","MyStore/Components/CheckOut/CheckOut.tsx","MyStore/Components/Products/ProductsByOrder.tsx","MyStore/Components/Router/RouterPage.tsx","MyStore/MyStore.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","display","Header","open","handleDrawerOpen","classes","AppBar","position","className","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","to","Typography","variant","noWrap","SideBarList","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","SideBarDrawer","handleDrawerClose","Drawer","paper","Home","getUrl","url","window","location","href","pathName","pathname","substring","length","FetchProductsbyCategory","category","callback","axios","get","then","res","data","console","log","FetchMultipleProductbyId","ids","AddNewProductStyle","root","margin","sendProductData","image","productName","productDescription","productCategory","productAmount","productPrice","post","id","FormData","append","statusText","sendDataToServer","AddNewProduct","useState","setProductName","setProductDescription","setProductCategory","setProductAmout","productImgSrc","setProductImageSrc","setProductPrice","Grid","container","item","xs","TextField","value","onChange","event","target","Select","labelId","MenuItem","type","name","min","max","Number","files","undefined","src","URL","createObjectURL","alt","Button","PagingStyle","TablePaginationActions","props","useTheme","count","page","rowsPerPage","onChangePage","disabled","direction","Math","ceil","GenericTableStyle","table","GenericTable","rows","rowComponent","React","setPage","setRowsPerPage","rowsToDisplay","slice","TableContainer","component","Paper","Table","TableHead","TableRow","TablePagination","rowsPerPageOptions","label","colSpan","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","TableBody","minWidth","height","img","SingleProductRow","price","description","amount","removeFromCart","removeFromStore","updateAmount","imgData","buffer","binary","call","Uint8Array","forEach","b","String","fromCharCode","btoa","arrayBufferToBase64","ButtonBase","sm","gutterBottom","TableOrder","map","row","key","addManageProductsFunction","products","setProducts","product","tempProduct","delete","filter","filterProduct","productId","updateProductAmount","currProduct","ManageProducts","setCategory","useEffect","ProductsTable","SingleOrderRow","firstName","lastName","address","city","postal","country","status","date","approve","disApprove","OrdersTable","setOrderStatus","orderId","orderStatus","fetchOrdersFromServer","ManageOrders","orders","setOrders","order","currOrder","setApproveAndDisapproveFunc","StorageManagement","match","useRouteMatch","style","textAlign","justify","path","ProductByCategory","useParams","TableProduct","OrdersPage","maxWidth","float","addToCart","SinglePage","AddProductToShoppingCart","ProductById","setProduct","FetchProductbyId","SingleProductPage","addRemoveProductFromCartFunction","typography","backgroundColor","palette","background","ShoppingCart","reduce","currentTotal","CheckOut","setFirstName","setLastName","setAddress","setCity","setPostal","setCountry","showDialog","setShowDialog","Dialog","DialogTitle","DialogContent","DialogActions","required","fullWidth","autoComplete","ProductsByOrder","RouterPage","StoreManagement","content","flexGrow","MyStore","setOpen","CssBaseline","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.435dbd5d.chunk.js","sourcesContent":["import React, {FC} from 'react';\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport clsx from \"clsx\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./linkStyle.css\"\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n        appBarShift: {\r\n            marginLeft: drawerWidth,\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        menuButton: {\r\n            marginRight: 36,\r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n    }),\r\n);\r\n\r\nconst Header: FC<{open: boolean, handleDrawerOpen: () => void}> = ({open, handleDrawerOpen}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar\r\n            position=\"fixed\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: open,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={handleDrawerOpen}\r\n                    edge=\"start\"\r\n                    className={clsx(classes.menuButton, {\r\n                        [classes.hide]: open,\r\n                    })}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Link to=\"/\" className=\"LinkStyle\">\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        MyStore\r\n                    </Typography>\r\n                </Link>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, {FC} from 'react';\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TvIcon from '@material-ui/icons/Tv';\r\nimport AndroidIcon from '@material-ui/icons/Android';\r\nimport ComputerIcon from '@material-ui/icons/Computer';\r\nimport HeadsetIcon from '@material-ui/icons/Headset';\r\nimport SportsFootballIcon from '@material-ui/icons/SportsFootball';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport \"./linkStyle.css\"\r\n\r\nconst SideBarList: FC = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <List>\r\n                <ListItem button>\r\n                    <ListItemIcon><Link to=\"/products/Televisions\" className=\"LinkStyle\"><TvIcon/></Link></ListItemIcon>\r\n                    <Link to=\"/products/Televisions\" className=\"LinkStyle\"><ListItemText primary=\"Televisions\"/></Link>\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <ListItemIcon><Link to=\"/products/Cellphones\" className=\"LinkStyle\"><AndroidIcon/></Link></ListItemIcon>\r\n                    <Link to=\"/products/Cellphones\" className=\"LinkStyle\"><ListItemText primary=\"Cellphones\" /></Link>\r\n                </ListItem>\r\n\r\n                <ListItem button>\r\n                    <ListItemIcon><Link to=\"/products/Computers\" className=\"LinkStyle\"><ComputerIcon/></Link></ListItemIcon>\r\n                    <Link to=\"/products/Computers\" className=\"LinkStyle\"><ListItemText primary=\"Computers\" /></Link>\r\n                </ListItem>\r\n\r\n                <ListItem button>\r\n                    <ListItemIcon><Link to=\"/products/Headset\" className=\"LinkStyle\"><HeadsetIcon/></Link></ListItemIcon>\r\n                    <Link to=\"/products/Headset\" className=\"LinkStyle\"><ListItemText primary=\"Headset\" /></Link>\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <ListItemIcon><Link to=\"/products/Sport\" className=\"LinkStyle\"><SportsFootballIcon/></Link></ListItemIcon>\r\n                    <Link to=\"/products/Sport\" className=\"LinkStyle\"><ListItemText primary=\"Sport\" /></Link>\r\n                </ListItem>\r\n\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                <ListItem button>\r\n                    <ListItemIcon><Link to=\"/shoppingcart\" className=\"LinkStyle\"><ShoppingCartIcon/></Link></ListItemIcon>\r\n                    <Link to=\"/shoppingcart\" className=\"LinkStyle\"><ListItemText primary=\"Shopping Cart\"/></Link>\r\n                </ListItem>\r\n\r\n                <ListItem button>\r\n                    <ListItemIcon><Link to=\"/orders\" className=\"LinkStyle\"><AssignmentIcon/></Link></ListItemIcon>\r\n                    <Link to=\"/orders\" className=\"LinkStyle\"><ListItemText primary=\"Orders\"/></Link>\r\n                </ListItem>\r\n\r\n                <ListItem button>\r\n                    <ListItemIcon><Link to=\"/Store\" className=\"LinkStyle\"><StorageIcon/></Link></ListItemIcon>\r\n                    <Link to=\"/Store\" className=\"LinkStyle\"><ListItemText primary=\"Store manage\"/></Link>\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SideBarList;\r\n","import React, {FC} from 'react';\r\nimport clsx from \"clsx\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport SideBarList from \"./SideBarList\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            whiteSpace: 'nowrap',\r\n        },\r\n        drawerOpen: {\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        drawerClose: {\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            overflowX: 'hidden',\r\n            width: theme.spacing(7) + 1,\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: theme.spacing(9) + 1,\r\n            },\r\n        },\r\n        toolbar: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            padding: theme.spacing(0, 1),\r\n            ...theme.mixins.toolbar,\r\n        },\r\n    }),\r\n);\r\n\r\nconst SideBarDrawer: FC<{open: boolean, handleDrawerClose: () => void}> = ({open, handleDrawerClose}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Drawer\r\n            variant=\"permanent\"\r\n            className={clsx(classes.drawer, {\r\n                [classes.drawerOpen]: open,\r\n                [classes.drawerClose]: !open,\r\n            })}\r\n            classes={{\r\n                paper: clsx({\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                }),\r\n            }}\r\n        >\r\n            <div className={classes.toolbar}>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                    <ChevronRightIcon />\r\n                </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <SideBarList/>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nexport default SideBarDrawer;\r\n","import React, {FC} from 'react';\r\n\r\nconst Home: FC = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Welcome to my store</h1>\r\n            <h2>Try to have fun</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import {ProductProps} from \"./ProductRow\"\r\nimport axios from 'axios';\r\n\r\nexport const getUrl = (): string => {\r\n    const url = window.location.href\r\n    const pathName = window.location.pathname\r\n    return url.substring(0, url.length - pathName.length)\r\n    // return \"http://localhost:4000\"\r\n}\r\n\r\nexport const FetchProductsbyCategory = (category: string = \"\", callback: (products: ProductProps[]) => void): void => {\r\n    axios.get(getUrl() + \"/api/product/category/\" + category).then(\r\n        res => { // then print response status\r\n            callback (res.data)\r\n            console.log(res.data)\r\n    })\r\n}\r\n\r\nexport const FetchProductbyId = (productId: number = 0, callback: (products: ProductProps) => void): void => {\r\n    axios.get(getUrl() + \"/api/product/id/\" + productId).then(\r\n        res => { // then print response status\r\n            callback (res.data[0])\r\n            console.log(res.data)\r\n    })\r\n}\r\n\r\nexport const FetchProductsIdFromShoppingCart = (callback: (products: ProductProps[]) => void) : void => {\r\n    axios.get(getUrl() + \"/api/shoppingcart/\").then(\r\n        (res: {\r\n            data: {id: number, productId: number,amount:number}[]\r\n        }) => { // then print response status\r\n            let ids = \"\"\r\n            if (res.data.length !== 0) {\r\n                res.data.map(value => ids= ids + \",\" + value.productId)\r\n                ids = ids.substring(1);\r\n                console.log(ids)\r\n                FetchMultipleProductbyId(ids, callback);\r\n            } else {\r\n                callback([])\r\n            }\r\n    })\r\n}\r\n\r\nexport const FetchProductbyOrder = (id: number, callback: (products: ProductProps[]) => void): void => {\r\n    axios.get(getUrl() + \"/api/order/productsIds/\" + id).then(\r\n        (res: {\r\n            data: {id: number, orderId: number, productId: number,amount:number}[]\r\n        }) => { // then print response status\r\n            let ids = \"\"\r\n            if (res.data.length !== 0) {\r\n                res.data.map(value => ids= ids + \",\" + value.productId)\r\n                ids = ids.substring(1);\r\n                console.log(ids)\r\n                FetchMultipleProductbyId(ids, callback);\r\n            } else {\r\n                callback([])\r\n            }\r\n    })\r\n}\r\n\r\nexport const FetchMultipleProductbyId = (ids: string, callback: (products: ProductProps[]) => void) : void => {\r\n    axios.get(getUrl() + \"/api/product/mulitipleid/\" + ids).then(\r\n        res => { // then print response status\r\n            console.log(res.data)\r\n            callback(res.data)\r\n    })\r\n}\r\n\r\nexport const removeProductFromShoppingCart = (id: number) : void => {\r\n    axios.delete(getUrl() + \"/api/shoppingcart/removeProduct/\" + id).then(\r\n        res => { // then print response status\r\n            console.log(res.data)\r\n    })\r\n}","import React, {FC, useState, ChangeEvent} from 'react';\r\nimport { TextField, Grid, makeStyles, Select, MenuItem, Button} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport {getUrl} from \"../Products/FetchDataFromServer\"\r\n\r\nconst AddNewProductStyle = makeStyles({\r\n    root: {\r\n        width: '500px',\r\n        margin: 'auto'\r\n    },\r\n});\r\n\r\nconst sendDataToServer = (image: File, id: string) => {\r\n    const data = new FormData() \r\n    data.append('file', image)\r\n    axios.post(getUrl() + \"/api/product/add/\" + id, data, { // receive two parameter endpoint url ,form data \r\n    })\r\n    .then(res => { // then print response status\r\n    console.log(res.statusText)\r\n    })\r\n}\r\n\r\nconst sendProductData = (image: File, productName: string, productDescription: string, productCategory: string, productAmount: string, productPrice: number): number => {\r\n    const data = {\r\n        productName: productName,\r\n        productDescription: productDescription,\r\n        productCategory: productCategory,\r\n        productAmount: productAmount,\r\n        productPrice: productPrice\r\n    }\r\n\r\n    axios.post(getUrl() + \"/api/product/addProduct\", data, {}).then(\r\n        res => { // then print response status\r\n            console.log(res)\r\n            sendDataToServer(image, res.data)\r\n    })\r\n\r\n    return 0;\r\n}\r\n\r\n\r\nconst AddNewProduct: FC = () => {\r\n    const classes = AddNewProductStyle();\r\n    const [productName, setProductName] = useState<string>('');\r\n    const [productDescription, setProductDescription] = useState<string>('');\r\n    const [productCategory, setProductCategory] = useState<string>('');\r\n    const [productAmount, setProductAmout] = useState<string>('');\r\n    const [productImgSrc, setProductImageSrc] = useState<File>();\r\n    const [productPrice, setProductPrice] = useState<number>(0);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={3} className={classes.root}>\r\n                <Grid item xs={6}>\r\n                <h3>Name: </h3>\r\n                <TextField \r\n                    id=\"standard-basic\" \r\n                    value={productName} \r\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => setProductName(event.target.value)}\r\n                />\r\n                <h3>Description: </h3>\r\n                <TextField \r\n                    id=\"standard-basic\" \r\n                    value={productDescription} \r\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => setProductDescription(event.target.value)}/>\r\n                <h3>Category:</h3>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={productCategory}\r\n                    onChange={(event: ChangeEvent<any>) => setProductCategory(event.target.value)}\r\n                >\r\n                    <MenuItem value={'Televisions'}>Televisions</MenuItem>\r\n                    <MenuItem value={'Cellphones'}>Cellphones</MenuItem>\r\n                    <MenuItem value={'Computers'}>Computers</MenuItem>\r\n                    <MenuItem value={'Headset'}>Headset</MenuItem>\r\n                    <MenuItem value={'Sport'}>Sport</MenuItem>\r\n                </Select>\r\n                <h3>Amount:</h3>\r\n                <input \r\n                    type=\"number\" \r\n                    name=\"quantity\"\r\n                    min=\"1\" \r\n                    max=\"5\" \r\n                    value={productAmount} \r\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => setProductAmout(event.target.value)}\r\n                />\r\n                <h3>Price:</h3>\r\n                <TextField \r\n                    id=\"standard-basic\" \r\n                    value={productPrice} \r\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => {\r\n                        if(event.target.value === '') {\r\n                            setProductPrice(0)\r\n                        }\r\n                        else if (Number(event.target.value)) {\r\n                            setProductPrice(Number(event.target.value))\r\n                        }\r\n                    }}/>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <h3>image src: </h3>\r\n                    <input type=\"file\" \r\n                        name=\"file\" \r\n                        onChange={(event: ChangeEvent<any>)=> setProductImageSrc(event.target.files[0])}/>\r\n                    {\r\n                        productImgSrc !== undefined ? <img src={URL.createObjectURL(productImgSrc)} alt=\"product\"/> : <></>\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n            <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"\r\n                onClick={() => {\r\n                    if(productImgSrc !== undefined) {\r\n                        sendProductData(productImgSrc, productName, productDescription, productCategory, productAmount, productPrice)\r\n                    }\r\n                }}\r\n            >\r\n                Add product\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n","import React from \"react\";\r\nimport {createStyles, makeStyles, Theme, useTheme} from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\n\r\nconst PagingStyle = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexShrink: 0,\r\n            marginLeft: theme.spacing(2.5),\r\n        },\r\n    }),\r\n);\r\n\r\nexport interface TablePaginationActionsProps {\r\n    count: number;\r\n    page: number;\r\n    rowsPerPage: number;\r\n    onChangePage: (event: React.MouseEvent<HTMLButtonElement>, newPage: number) => void;\r\n}\r\n\r\nfunction TablePaginationActions(props: TablePaginationActionsProps) {\r\n    const classes = PagingStyle();\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n    const handleFirstPageButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        onChangePage(event, 0);\r\n    };\r\n\r\n    const handleBackButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        onChangePage(event, page - 1);\r\n    };\r\n\r\n    const handleNextButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        onChangePage(event, page + 1);\r\n    };\r\n\r\n    const handleLastPageButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <IconButton\r\n                onClick={handleFirstPageButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"first page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n            </IconButton>\r\n            <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleNextButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"next page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleLastPageButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"last page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TablePaginationActions;","import React, {FC} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {TableHead} from \"@material-ui/core\";\r\nimport {OrderProps} from \"../Orders/OrderRow\";\r\nimport {ProductProps} from \"../Products/ProductRow\"\r\nimport TablePaginationActions from \"./TablePagingAction\";\r\n\r\nconst GenericTableStyle = makeStyles({\r\n    table: {\r\n        width: '500px',\r\n        margin: 'auto'\r\n    },\r\n});\r\n\r\nexport interface GenericTableProps {\r\n    rows: OrderProps[] | ProductProps[],\r\n    rowComponent: FC< {rows: OrderProps[] | ProductProps[]}>\r\n}\r\n\r\nconst GenericTable: FC<GenericTableProps> = ({rows, rowComponent}) => {\r\n    const classes = GenericTableStyle();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement> | null, newPage: number) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (\r\n        event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    ) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const rowsToDisplay= {\r\n        rows:(rowsPerPage > 0\r\n                ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                : rows\r\n        )\r\n    };\r\n\r\n    // @ts-ignore\r\n    // @ts-ignore\r\n    return (\r\n        <div className={classes.table}>\r\n        {(rows.length === 0) ?\r\n            <h1>There is not object to display</h1> :\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TablePagination\r\n                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                colSpan={3}\r\n                                count={rows.length}\r\n                                rowsPerPage={rowsPerPage}\r\n                                page={page}\r\n                                SelectProps={{\r\n                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                    native: true,\r\n                                }}\r\n                                onChangePage={handleChangePage}\r\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                ActionsComponent={TablePaginationActions}\r\n                            />\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            rowComponent({...rowsToDisplay})\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GenericTable;\r\n","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '100%'\r\n        },\r\n        paper: {\r\n            padding: theme.spacing(2),\r\n            minWidth: '500px'\r\n        },\r\n        image: {\r\n            width: 128,\r\n            height: 128,\r\n        },\r\n        img: {\r\n            margin: 'auto',\r\n            display: 'block',\r\n            width: '100px',\r\n            height: '100px',\r\n        },\r\n    }),\r\n);\r\n\r\nexport default useStyles;","import React, {FC, ChangeEvent} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport useStyles from \"../GenericTable/GenericTableStyle\"\r\nimport { Button } from '@material-ui/core';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport interface ProductProps {\r\n    id: number,\r\n    name: string,\r\n    description: string,\r\n    price: number,\r\n    amount: number,\r\n    image: Buffer\r\n    removeFromCart?: () => void\r\n    removeFromStore?: () => void\r\n    updateAmount?: (amount: number) => void\r\n}\r\n\r\nconst arrayBufferToBase64 = (buffer: any): any => {\r\n    var binary = '';\r\n    var bytes = [].slice.call(new Uint8Array(buffer.data));\r\n    bytes.forEach((b) => binary += String.fromCharCode(b));\r\n    return window.btoa(binary);\r\n};\r\n\r\nconst SingleProductRow: FC<ProductProps> = (\r\n    {\r\n        id,\r\n        name,\r\n        description,\r\n        price,\r\n        amount,\r\n        removeFromCart,\r\n        removeFromStore,\r\n        updateAmount,\r\n        image\r\n    }) => {\r\n    const classes = useStyles();\r\n    const base64Flag = 'data:image/jpeg;base64,';\r\n    const imageStr = arrayBufferToBase64(image);\r\n    const imgData = base64Flag + imageStr\r\n    return (\r\n        <div>\r\n            <Paper className={classes.paper}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item>\r\n                        <ButtonBase className={classes.image}>\r\n                            <img className={classes.img} src={imgData} alt={name}/>\r\n                        </ButtonBase>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm container>\r\n                        <Grid item xs container direction=\"column\" spacing={2}>\r\n                            <Grid item xs>\r\n                                <Typography gutterBottom>\r\n                                    {name}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography>${price}</Typography>\r\n                            <Link to={`/productById/${id}`} className=\"LinkStyle\">\r\n                                <Button \r\n                                    variant=\"contained\" \r\n                                    color=\"default\"\r\n                                >\r\n                                    view product\r\n                                </Button>\r\n                            </Link>\r\n                            {\r\n                                removeFromCart !== undefined ?\r\n                                <Button \r\n                                    variant=\"contained\" \r\n                                    color=\"secondary\"\r\n                                    onClick= {() => removeFromCart()}\r\n                                >\r\n                                    remove\r\n                                </Button> :\r\n                                <></>\r\n                            }\r\n                            {\r\n                                removeFromStore !== undefined && updateAmount !== undefined ?\r\n                                    <div>\r\n                                        <div>\r\n                                            <Button \r\n                                                variant=\"contained\" \r\n                                                color=\"secondary\"\r\n                                                onClick= {() => removeFromStore()}\r\n                                            >\r\n                                            remove from store\r\n                                            </Button> \r\n                                        </div>\r\n                                        <div>\r\n                                            amount in storage: \r\n                                            <input \r\n                                                type=\"number\" \r\n                                                name=\"quantity\"\r\n                                                min=\"0\" \r\n                                                max=\"5\" \r\n                                                value={amount} \r\n                                                onChange={(event: ChangeEvent<HTMLInputElement>) => updateAmount(Number(event.target.value))}\r\n                                            />\r\n                                        </div>\r\n                                    </div> :\r\n                                    <></>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SingleProductRow;","import React, {FC} from 'react';\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport SingleProductRow, {ProductProps} from \"./ProductRow\"\r\n\r\nconst TableOrder: FC<{rows: ProductProps[] | any}> = ({rows}) => {\r\n    return (\r\n        <div className=\"App\">\r\n            {\r\n                rows.map((row: ProductProps) =>\r\n                    <TableRow key={row.id}>\r\n                        <SingleProductRow {...row}/>\r\n                    </TableRow>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TableOrder;\r\n","import React, {FC, useState, useEffect} from 'react';\r\nimport {FetchProductsbyCategory, getUrl} from \"../Products/FetchDataFromServer\"\r\nimport { Button } from '@material-ui/core';\r\nimport { ProductProps } from '../Products/ProductRow';\r\nimport GenericTable from '../GenericTable/GenericTable';\r\nimport ProductsTable from \"../Products/ProductsTable\"\r\nimport axios from 'axios';\r\n\r\nconst updateProductAmount = (id: number, amount: number) => {\r\n    axios.post(getUrl() + \"/api/product/updateAmount/\", {\r\n        productId: id,\r\n        productAmount: amount\r\n    }).then(\r\n        res => { // then print response status\r\n            console.log(res.data)\r\n    })\r\n}\r\n\r\nconst removeProductFromStore = (id: number) => {\r\n    axios.delete(getUrl() + \"/api/product/removeProduct/\" + id).then(\r\n        res => { // then print response status\r\n            console.log(res.data)\r\n    })\r\n}\r\n\r\nconst addManageProductsFunction = (products: ProductProps[], setProducts: (data: ProductProps[]) => void) : ProductProps[] => {\r\n    return products.map(product => {\r\n        const tempProduct:ProductProps = product\r\n        tempProduct.removeFromStore = () => {\r\n            removeProductFromStore(product.id)\r\n            setProducts(products.filter(filterProduct => filterProduct.id !== product.id))\r\n        }\r\n\r\n        tempProduct.updateAmount = (amount: number) => {\r\n            updateProductAmount(product.id, amount)\r\n            setProducts(products.map(currProduct => currProduct.id === product.id ? {...currProduct, amount: amount} : currProduct))\r\n        }\r\n\r\n        return tempProduct;\r\n    })\r\n}\r\n\r\nconst ManageProducts: FC = () => {\r\n    const [category, setCategory] = useState<string>('');\r\n    const [products, setProducts] = useState<ProductProps[]>([]);\r\n\r\n    useEffect(() => {\r\n        FetchProductsbyCategory(category, (products: ProductProps[]) => {\r\n            setProducts(addManageProductsFunction(products, setProducts))\r\n        }\r\n    )}, [category])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            choose category: \r\n            <Button onClick={() => setCategory('Televisions')}>\r\n                Televisions\r\n            </Button>\r\n            <Button onClick={() => setCategory('Cellphones')}>\r\n                Cellphones\r\n            </Button>\r\n            <Button onClick={() => setCategory('Computers')}>\r\n                Computers\r\n            </Button>\r\n            <Button onClick={() => setCategory('Headset')}>\r\n                Headset\r\n            </Button>\r\n            <Button onClick={() => setCategory('Sport')}>\r\n                Sport\r\n            </Button>\r\n            {\r\n                category !== '' ? \r\n                    <GenericTable\r\n                        rowComponent={ProductsTable}\r\n                        rows={products}\r\n                    /> :\r\n                    <></>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManageProducts;\r\n","import React, {FC} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport useStyles from \"../GenericTable/GenericTableStyle\"\r\nimport { Button } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport \"../MainPage/linkStyle.css\"\r\n\r\nexport interface OrderProps {\r\n    id: number,\r\n    firstName: string,\r\n    lastName: string,\r\n    address: string,\r\n    city: string,\r\n    postal: string,\r\n    country: string,\r\n    status: string,\r\n    date: string,\r\n    approve?: () => void,\r\n    disApprove?: () => void,\r\n}\r\n\r\nconst SingleOrderRow: FC<OrderProps> = ({id, firstName, lastName, address, city, postal, country, status, date, approve, disApprove}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.paper}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={3}>\r\n                        first name:\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        {firstName}\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        last name:\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        {lastName}\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        address:\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        {address}\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        city:\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        {city}\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        postal:\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        {postal}\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        country:\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        {country}\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        date:\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        {date}\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        status:\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        {status}\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        {\r\n                            approve !== undefined && status === 'waitForApproval' ?\r\n                                <Button\r\n                                    onClick = {() => approve()}\r\n                                >\r\n                                    approve\r\n                                </Button> : \r\n                                <></>\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        {\r\n                            disApprove !== undefined && status === 'waitForApproval' ?\r\n                                <Button\r\n                                    onClick = {() => disApprove()}\r\n                                >\r\n                                    disApprove\r\n                                </Button> : \r\n                                <></>\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Link to={`/productByOrder/${id}`} className=\"LinkStyle\">\r\n                            <Button>\r\n                                view items\r\n                            </Button>\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SingleOrderRow;","import React, {FC} from 'react';\r\nimport SingleOrderRow, {OrderProps} from \"./OrderRow\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nconst OrdersTable: FC<{rows: OrderProps[] | any}> = ({rows}) => {\r\n    return (\r\n        <div className=\"App\">\r\n            {\r\n                rows.map((row: OrderProps) =>\r\n                    <TableRow key={row.id}>\r\n                        <SingleOrderRow {...row}/>\r\n                    </TableRow>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrdersTable;\r\n","import React, {FC, useState, useEffect} from 'react';\r\nimport GenericTable from '../GenericTable/GenericTable';\r\nimport OrdersTable from '../Orders/OrdersTable';\r\nimport { OrderProps } from '../Orders/OrderRow';\r\nimport axios from 'axios';\r\nimport { getUrl } from '../Products/FetchDataFromServer';\r\n\r\nconst setOrderStatus = (orderId: number, status: string) : void => {\r\n    axios.post(getUrl() + \"/api/order/changeStatus\", {\r\n        orderId: orderId,\r\n        orderStatus: status\r\n    }).then(\r\n        res => { // then print response status\r\n            console.log(res.data)\r\n    })\r\n}\r\n\r\nconst setApproveAndDisapproveFunc = (orders: OrderProps[], setOrders : (orders:OrderProps[]) => void): void => {\r\n    setOrders(orders.map(order => {\r\n        order.approve = () => {\r\n            order.status = 'approve'\r\n            setOrderStatus(order.id, 'approve')\r\n            setOrders(orders.map(currOrder => currOrder.id !== order.id ? currOrder : order))\r\n        }\r\n\r\n        order.disApprove = () => {\r\n            order.status = 'disapprove'\r\n            setOrderStatus(order.id, 'disapprove')\r\n            setOrders(orders.map(currOrder => currOrder.id !== order.id ? currOrder : order))\r\n        }\r\n\r\n        return order\r\n    }))\r\n}\r\n\r\nexport const fetchOrdersFromServer = (callback: (orders: OrderProps[]) => void) => {\r\n    axios.get(getUrl() + \"/api/order/all\").then(\r\n        res => { // then print response status\r\n            console.log(res.data)\r\n            callback(res.data)\r\n    })\r\n}\r\n\r\nconst ManageOrders: FC = () => {\r\n    const [orders, setOrders] = useState<OrderProps[]>([])\r\n\r\n    useEffect(() => {\r\n        fetchOrdersFromServer((orders: OrderProps[]) => setApproveAndDisapproveFunc(orders, setOrders))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <GenericTable\r\n                rows={orders}\r\n                rowComponent={OrdersTable}\r\n            />\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default ManageOrders;\r\n","import React, {FC} from 'react';\r\nimport AddNewProduct from \"./AddNewProduct\"\r\nimport { useRouteMatch, Link, Switch, Route } from 'react-router-dom';\r\nimport ManageProducts from './ManageProducts';\r\nimport \"../MainPage/linkStyle.css\"\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport ManageOrders from './ManageOrders';\r\nconst StorageManagement: FC = () => {\r\n    let match = useRouteMatch();\r\n    return (\r\n        <div className=\"App\">\r\n            <Grid container xs={12} spacing={2} style={{textAlign: 'center'}} justify=\"center\">\r\n                <Grid item>\r\n                    <Link to={`${match.url}/AddNewProduct`} className=\"LinkStyle\">\r\n                        <Button color=\"default\" variant=\"contained\">\r\n                            Add New Product\r\n                        </Button>\r\n                    </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Link to={`${match.url}/ManageProducts`} className=\"LinkStyle\">\r\n                        <Button color=\"default\" variant=\"contained\">\r\n                            Manage Products\r\n                        </Button>\r\n                    </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Link to={`${match.url}/ManageOrders`} className=\"LinkStyle\">\r\n                        <Button color=\"default\" variant=\"contained\">\r\n                            Manage Orders\r\n                        </Button>\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n            <Switch>\r\n                <Route path={`${match.path}/AddNewProduct`}>\r\n                    <AddNewProduct/>\r\n                </Route>\r\n                <Route path={`${match.path}/ManageProducts`}>\r\n                    <ManageProducts/>\r\n                </Route>\r\n                <Route path={`${match.path}/ManageOrders`}>\r\n                    <ManageOrders/>\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StorageManagement;\r\n","import React, {FC, useState, useEffect} from 'react';\r\nimport { ProductProps } from './ProductRow';\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\nimport { FetchProductsbyCategory } from './FetchDataFromServer';\r\nimport GenericTable from '../GenericTable/GenericTable';\r\nimport TableProduct from './ProductsTable';\r\n\r\nconst ProductByCategory: FC = () => {\r\n    const [products, setProducts] = useState<ProductProps[]>([])\r\n    let { category } = useParams();\r\n\r\n    useEffect(() => {\r\n        FetchProductsbyCategory(category, (products: ProductProps[]) => setProducts((products))\r\n    )}, [category])\r\n\r\n    return (\r\n        <GenericTable\r\n            rowComponent={TableProduct}\r\n            rows={products}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ProductByCategory","import React, { FC, useState, useEffect} from \"react\"\r\nimport GenericTable from \"../GenericTable/GenericTable\"\r\nimport OrdersTable from '../Orders/OrdersTable';\r\nimport {fetchOrdersFromServer} from \"../StoreManagment/ManageOrders\"\r\nimport { OrderProps } from \"./OrderRow\"\r\n\r\nconst OrdersPage : FC = () => {\r\n    const [orders, setOrders] = useState<OrderProps[]>([])\r\n\r\n    useEffect(() => {\r\n        fetchOrdersFromServer(setOrders);\r\n    }, [])\r\n    return (\r\n        <GenericTable\r\n            rows={orders}\r\n            rowComponent={OrdersTable}\r\n        />\r\n    )\r\n}\r\n\r\nexport default OrdersPage","import React, {FC} from 'react';\r\nimport {ProductProps} from \"./ProductRow\"\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport { getUrl } from './FetchDataFromServer';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            maxWidth: 700,\r\n            margin: 'auto'\r\n        },\r\n        image: {\r\n            width: 328,\r\n            height: 328,\r\n        },\r\n        img: {\r\n            margin: 'auto',\r\n            display: 'block',\r\n            width: '300px',\r\n            height: '300px',\r\n        },\r\n        price: {\r\n            float: 'left'\r\n        },\r\n        addToCart: {\r\n            float: 'right'\r\n        }\r\n    }),\r\n);\r\n\r\nconst AddProductToShoppingCart = (productId: number) => {\r\n    const data = {\r\n        productId: productId,\r\n    }\r\n\r\n    axios.post(getUrl() + \"/api/shoppingcart/addProduct\", data, {}).then(\r\n        res => { // then print response status\r\n            console.log(res)\r\n    })\r\n}\r\n\r\nconst arrayBufferToBase64 = (buffer: any): any => {\r\n    var binary = '';\r\n    var bytes = [].slice.call(new Uint8Array(buffer.data));\r\n    bytes.forEach((b) => binary += String.fromCharCode(b));\r\n    return window.btoa(binary);\r\n};\r\n\r\nconst SinglePage: FC<ProductProps> = ({id, name, description, amount, price, image}) => {\r\n    const classes = useStyles();\r\n    const base64Flag = 'data:image/jpeg;base64,';\r\n    const imageStr = arrayBufferToBase64(image);\r\n    const imgData = base64Flag + imageStr\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid className={classes.root} container spacing={2}>\r\n                {\r\n                    amount === 0 ?\r\n                    <h1>The product not available in the store</h1> :\r\n                    <></>\r\n                }\r\n                <Grid item>\r\n                    <div className={classes.image}>\r\n                        <img className={classes.img} src={imgData} alt={name}/>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12} sm container>\r\n                    <Grid item xs container direction=\"column\">\r\n                        <h1>{name}</h1>\r\n                        {description}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <div>\r\n                <p className={classes.price}>Final price:${price}</p>\r\n                <Button \r\n                    className={classes.addToCart} \r\n                    disabled={amount === 0}\r\n                    color=\"primary\" \r\n                    variant=\"contained\"\r\n                    onClick = {() => {\r\n                        AddProductToShoppingCart(id)\r\n                    }}>\r\n                    Add to shopping cart\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SinglePage;\r\n","import React, { FC, useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ProductProps } from \"./ProductRow\";\r\nimport { FetchProductbyId } from \"./FetchDataFromServer\";\r\nimport SingleProductPage from \"./SingleProductPage\"\r\n\r\nconst ProductById : FC = () => {\r\n    let { productId } = useParams();\r\n    const [product, setProduct] = useState<ProductProps>()\r\n\r\n    useEffect(() => {\r\n        FetchProductbyId(Number(productId), (data: ProductProps) => setProduct(data))\r\n    }, [productId])\r\n\r\n    return (\r\n        <div>\r\n        {\r\n            (product !== undefined) ? \r\n            <SingleProductPage {...product} />:\r\n            <div>Invalid product id</div>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductById","import React, { FC, useState, useEffect} from \"react\"\r\nimport { ProductProps } from \"../Products/ProductRow\"\r\nimport { FetchProductsIdFromShoppingCart, removeProductFromShoppingCart } from \"../Products/FetchDataFromServer\"\r\nimport GenericTable from \"../GenericTable/GenericTable\"\r\nimport TableProduct from \"../Products/ProductsTable\"\r\nimport { Button, Grid, makeStyles, Theme, createStyles } from \"@material-ui/core\"\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport \"../MainPage/linkStyle.css\"\r\n\r\nconst addRemoveProductFromCartFunction = (products: ProductProps[], setProducts:(data: ProductProps[]) => void) : ProductProps[] => {\r\n    return products.map(product => {\r\n        const tempProduct:ProductProps = product\r\n        tempProduct.removeFromCart = () => {\r\n            removeProductFromShoppingCart(product.id)\r\n            setProducts(products.filter(filterProduct => filterProduct.id !== product.id))\r\n        }\r\n        return tempProduct\r\n    })\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      ...theme.typography.button,\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\n\r\nconst ShoppingCart: FC = () => {\r\n    const classes = useStyles();\r\n    const [products, setProducts] = useState<ProductProps[]>([])\r\n\r\n    useEffect(() => {\r\n        FetchProductsIdFromShoppingCart((data: ProductProps[]) => \r\n            setProducts(addRemoveProductFromCartFunction(data, setProducts)))\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                products.length !== 0 ?\r\n                    <Grid container justify=\"center\">\r\n                        <Grid item>\r\n                        <div className={classes.root}>\r\n                            total price : ${products.reduce((currentTotal, product) => currentTotal + product.price,0)}\r\n                        </div>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link to=\"/Checkout\" className=\"LinkStyle\">\r\n                                <Button \r\n                                    color=\"primary\"\r\n                                    variant=\"contained\"\r\n                                >\r\n                                    Check out\r\n                                </Button>\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid> : \r\n                    <></>\r\n            }\r\n            <GenericTable\r\n                rowComponent={TableProduct}\r\n                rows={products}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShoppingCart","import React, { FC , Fragment, useState, ChangeEvent} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport {getUrl} from \"../Products/FetchDataFromServer\"\r\n\r\nconst order = (firstName: string, lastName: string, address: string, city: string, postal: string, country: string) => {\r\n  \tconst data = {\r\n\t\tfirstName: firstName,\r\n\t\tlastName: lastName,\r\n\t\taddress: address,\r\n\t\tcity: city,\r\n\t\tpostal: postal,\r\n\t\tcountry: country\r\n\t}\r\n\r\n\taxios.post(getUrl() + \"/api/order/addOrder\", data, {}).then(\r\n\t\tres => { // then print response status\r\n\t\t\tconsole.log(res)\r\n\t})\r\n}\r\n\r\nconst CheckOut: FC = () => {\r\n  const [firstName, setFirstName] = useState<string>('')\r\n  const [lastName, setLastName] = useState<string>('')\r\n  const [address, setAddress] = useState<string>('')\r\n  const [city, setCity] = useState<string>('');\r\n  const [postal, setPostal] = useState<string>('')\r\n  const [country, setCountry] = useState<string>('')\r\n  const [showDialog, setShowDialog] = useState<boolean>(false);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Dialog open={showDialog}>\r\n        <DialogTitle>\r\n          \tCompleteOreder\r\n        </DialogTitle>\r\n\t\t<DialogContent>\r\n\t\t\tAre you sure?\r\n\t\t</DialogContent>\r\n\t\t<DialogActions>\r\n\t\t\t<Button\r\n\t\t\t\tcolor='primary'\r\n\t\t\t\tvariant='contained'\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tsetShowDialog(false)\r\n\t\t\t\t\torder(firstName, lastName, address, city, postal, country)\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tyes\r\n\t\t\t</Button>\r\n\t\t\t<Button\r\n\t\t\t\tcolor='secondary'\r\n\t\t\t\tvariant='contained'\r\n\t\t\t\tonClick={() => setShowDialog(false)}\r\n\t\t\t>\r\n\t\t\t\tno\r\n\t\t\t</Button>\r\n\t\t</DialogActions>\r\n      </Dialog>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Shipping address\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n\t\t\trequired\r\n            label=\"First name\"\r\n            fullWidth\r\n\t\t\tautoComplete=\"fname\"\r\n\t\t\tvalue={firstName}\r\n\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => setFirstName(event.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            label=\"Last name\"\r\n            fullWidth\r\n\t\t\tautoComplete=\"lname\"\r\n\t\t\tvalue={lastName}\r\n\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => setLastName(event.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            label=\"Address\"\r\n            fullWidth\r\n\t\t\tautoComplete=\"billing address\"\r\n\t\t\tvalue={address}\r\n\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => setAddress(event.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            label=\"City\"\r\n            fullWidth\r\n\t\t\tautoComplete=\"billing City\"\r\n\t\t\tvalue={city}\r\n\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => setCity(event.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            label=\"Zip / Postal code\"\r\n            fullWidth\r\n\t\t\tautoComplete=\"billing postal-code\"\r\n\t\t\tvalue={postal}\r\n\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => setPostal(event.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            label=\"Country\"\r\n            fullWidth\r\n\t\t\tautoComplete=\"billing country\"\r\n\t\t\tvalue={country}\r\n\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => setCountry(event.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={9}/>\r\n        <Grid item xs={3}>\r\n          <Button\r\n            onClick={() => {\r\n\t\t\t\tsetShowDialog(true)\r\n            }}\r\n          >\r\n            Complete\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default CheckOut","import React, {FC, useState, useEffect} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { ProductProps } from './ProductRow';\r\nimport { FetchProductbyOrder } from './FetchDataFromServer';\r\nimport GenericTable from '../GenericTable/GenericTable';\r\nimport ProductsTable from './ProductsTable'\r\n\r\nconst ProductsByOrder: FC = () => {\r\n    let { orderId } = useParams();\r\n    const [products, setProducts] = useState<ProductProps[]>([])\r\n\r\n    useEffect(() => {\r\n        FetchProductbyOrder(Number(orderId), (data: ProductProps[]) => setProducts(data))\r\n    }, [orderId])\r\n\r\n    return (\r\n        <GenericTable\r\n            rowComponent={ProductsTable}\r\n            rows={products}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ProductsByOrder;\r\n","import React, {FC} from 'react';\r\nimport {\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport Home from \"../Home/Home\";\r\nimport StoreManagement from \"../StoreManagment/StoreManagement\"\r\nimport ProductByCategory from '../Products/ProductByCategory'\r\nimport OrderPage from '../Orders/OrdersPage';\r\nimport ProductById from '../Products/ProductById'\r\nimport ShoppingCart from '../ShoppingCart/ShoppingCart'\r\nimport CheckOut from '../CheckOut/CheckOut'\r\nimport ProductsByOrder from '../Products/ProductsByOrder';\r\n\r\nconst RouterPage: FC = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/products/:category\">\r\n                <ProductByCategory/>\r\n            </Route>\r\n            <Route path=\"/productById/:productId\">\r\n                <ProductById/>\r\n            </Route>\r\n            <Route path=\"/orders/\">\r\n                <OrderPage/>\r\n            </Route>\r\n            <Route path=\"/productByOrder/:orderId\">\r\n                <ProductsByOrder/>\r\n            </Route>\r\n            <Route path=\"/shoppingcart\">\r\n                <ShoppingCart/>\r\n            </Route>\r\n            <Route path=\"/Store\">\r\n                <StoreManagement/>\r\n            </Route>\r\n            <Route path=\"/CheckOut\">\r\n                <CheckOut/>\r\n            </Route>\r\n            <Route path=\"/\">\r\n                <Home/>\r\n            </Route>\r\n        </Switch>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default RouterPage;\r\n","import React from 'react';\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Header from \"./Components/MainPage/Header\"\r\nimport SideBarDrawer from \"./Components/MainPage/SideBarDrawer\";\r\nimport RouterPage from \"./Components/Router/RouterPage\";\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        toolbar: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            padding: theme.spacing(0, 1),\r\n            ...theme.mixins.toolbar,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(3),\r\n        },\r\n    }),\r\n);\r\n\r\nconst MyStore: React.FC = () => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Router>\r\n                <Header\r\n                    handleDrawerOpen={()=>handleDrawerOpen()}\r\n                    open={open}\r\n                />\r\n                <SideBarDrawer\r\n                    handleDrawerClose={()=> handleDrawerClose()}\r\n                    open={open}\r\n                />\r\n                <main className={classes.content}>\r\n                    <div className={classes.toolbar} />\r\n                    <RouterPage/>\r\n\r\n                    {/*<GenericTable rowComponent={TableOrder} rows={[{status: \"2\", date: new Date(), totalPrice:\"20\"}]}/>*/}\r\n                </main>\r\n            </Router>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyStore;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MyStore from \"./MyStore/MyStore\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<MyStore />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}